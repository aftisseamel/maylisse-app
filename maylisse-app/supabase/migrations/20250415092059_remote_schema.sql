

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."article_category" AS ENUM (
    'moule_rouge',
    'moule_bleu',
    'moule_noir',
    'papier_spécial1',
    'papier_spécial2',
    'papier_spécial3',
    'papier_spécial4',
    'papier_spécial5',
    'papier_spécial6',
    'papier_spécial7'
);


ALTER TYPE "public"."article_category" OWNER TO "postgres";


COMMENT ON TYPE "public"."article_category" IS 'enum that will contain the categories of the articles (the papers)';



CREATE TYPE "public"."cardboard_category" AS ENUM (
    'S',
    'M',
    'L',
    'XL'
);


ALTER TYPE "public"."cardboard_category" OWNER TO "postgres";


COMMENT ON TYPE "public"."cardboard_category" IS 'each carboad will have a category';


SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."article" (
    "id" bigint NOT NULL,
    "categorie" "public"."article_category" NOT NULL,
    "quantity" smallint,
    "description" character varying
);


ALTER TABLE "public"."article" OWNER TO "postgres";


COMMENT ON TABLE "public"."article" IS 'article table that will contain the articles with desciption and categories';



ALTER TABLE "public"."article" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."article_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."cardboard" (
    "id" bigint NOT NULL,
    "description" character varying,
    "size" "public"."cardboard_category"
);


ALTER TABLE "public"."cardboard" OWNER TO "postgres";


COMMENT ON TABLE "public"."cardboard" IS 'table carboard will contain the articles of each command';



COMMENT ON COLUMN "public"."cardboard"."size" IS 'the size of the cardboard, when preparing the carboard it will be selected';



ALTER TABLE "public"."cardboard" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."carboard_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."client" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "family_name" character varying,
    "phone" smallint,
    "address" character varying
);


ALTER TABLE "public"."client" OWNER TO "postgres";


COMMENT ON TABLE "public"."client" IS 'table for the clients that will make commands';



ALTER TABLE "public"."client" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."client_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."order" (
    "id" bigint NOT NULL,
    "description" character varying NOT NULL,
    "delivery_address" character varying,
    "id_client" bigint
);


ALTER TABLE "public"."order" OWNER TO "postgres";


ALTER TABLE "public"."order" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."command_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."commanded_articles" (
    "id_order" bigint NOT NULL,
    "id_article" bigint NOT NULL,
    "description" character varying,
    "commanded_quantity" smallint,
    "id_carboard" bigint
);


ALTER TABLE "public"."commanded_articles" OWNER TO "postgres";


COMMENT ON TABLE "public"."commanded_articles" IS 'table commanded_articles will contain each articles assigned to every command';



COMMENT ON COLUMN "public"."commanded_articles"."id_carboard" IS 'pour choisir quel article est mis dans un carton';



CREATE TABLE IF NOT EXISTS "public"."delivery" (
    "description" character varying NOT NULL,
    "id_delivery_man" bigint NOT NULL,
    "id_order" bigint NOT NULL
);


ALTER TABLE "public"."delivery" OWNER TO "postgres";


COMMENT ON TABLE "public"."delivery" IS 'join table by the delivery man and the command to assign each command to a delivery';



CREATE TABLE IF NOT EXISTS "public"."delivery_man" (
    "id" bigint NOT NULL,
    "created_at" "date" NOT NULL,
    "family_name" character varying,
    "name" character varying,
    "phone_number" numeric,
    "mail" character varying
);


ALTER TABLE "public"."delivery_man" OWNER TO "postgres";


COMMENT ON TABLE "public"."delivery_man" IS 'table pour caractériser les livreurs';



ALTER TABLE "public"."delivery_man" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."deliveryman_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."article"
    ADD CONSTRAINT "article_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."commanded_articles"
    ADD CONSTRAINT "articles_to_deliver_pkey" PRIMARY KEY ("id_order", "id_article");



ALTER TABLE ONLY "public"."cardboard"
    ADD CONSTRAINT "carboard_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."client"
    ADD CONSTRAINT "client_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."order"
    ADD CONSTRAINT "command_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."delivery"
    ADD CONSTRAINT "delivery_pkey" PRIMARY KEY ("id_delivery_man", "id_order");



ALTER TABLE ONLY "public"."delivery_man"
    ADD CONSTRAINT "deliveryman_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."delivery_man"
    ADD CONSTRAINT "deliveryman_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."commanded_articles"
    ADD CONSTRAINT "articles_to_deliver_id_article_fkey" FOREIGN KEY ("id_article") REFERENCES "public"."article"("id");



ALTER TABLE ONLY "public"."order"
    ADD CONSTRAINT "command_id_client_fkey" FOREIGN KEY ("id_client") REFERENCES "public"."client"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."commanded_articles"
    ADD CONSTRAINT "commanded_articles_id_carboard_fkey" FOREIGN KEY ("id_carboard") REFERENCES "public"."cardboard"("id");



ALTER TABLE ONLY "public"."commanded_articles"
    ADD CONSTRAINT "commanded_articles_id_order_fkey" FOREIGN KEY ("id_order") REFERENCES "public"."order"("id");



ALTER TABLE ONLY "public"."delivery"
    ADD CONSTRAINT "delivery_id_order_fkey" FOREIGN KEY ("id_order") REFERENCES "public"."order"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."delivery"
    ADD CONSTRAINT "livraison_id_delivery_man_fkey" FOREIGN KEY ("id_delivery_man") REFERENCES "public"."delivery_man"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE "public"."commanded_articles" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";



































































































































































































GRANT ALL ON TABLE "public"."article" TO "anon";
GRANT ALL ON TABLE "public"."article" TO "authenticated";
GRANT ALL ON TABLE "public"."article" TO "service_role";



GRANT ALL ON SEQUENCE "public"."article_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."article_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."article_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."cardboard" TO "anon";
GRANT ALL ON TABLE "public"."cardboard" TO "authenticated";
GRANT ALL ON TABLE "public"."cardboard" TO "service_role";



GRANT ALL ON SEQUENCE "public"."carboard_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."carboard_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."carboard_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."client" TO "anon";
GRANT ALL ON TABLE "public"."client" TO "authenticated";
GRANT ALL ON TABLE "public"."client" TO "service_role";



GRANT ALL ON SEQUENCE "public"."client_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."client_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."client_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."order" TO "anon";
GRANT ALL ON TABLE "public"."order" TO "authenticated";
GRANT ALL ON TABLE "public"."order" TO "service_role";



GRANT ALL ON SEQUENCE "public"."command_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."command_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."command_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."commanded_articles" TO "anon";
GRANT ALL ON TABLE "public"."commanded_articles" TO "authenticated";
GRANT ALL ON TABLE "public"."commanded_articles" TO "service_role";



GRANT ALL ON TABLE "public"."delivery" TO "anon";
GRANT ALL ON TABLE "public"."delivery" TO "authenticated";
GRANT ALL ON TABLE "public"."delivery" TO "service_role";



GRANT ALL ON TABLE "public"."delivery_man" TO "anon";
GRANT ALL ON TABLE "public"."delivery_man" TO "authenticated";
GRANT ALL ON TABLE "public"."delivery_man" TO "service_role";



GRANT ALL ON SEQUENCE "public"."deliveryman_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."deliveryman_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."deliveryman_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
